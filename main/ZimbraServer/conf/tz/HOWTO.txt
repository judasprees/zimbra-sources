The timezones.ics File
----------------------

The /opt/zimbra/conf/timezones.ics file lists all time zones known to ZCS.
When a calendar object references a time zone, the name is looked up in this
file to find the zone definition, including GMT offset and daylight savings
rules.  Some of the time zones are marked as primary.  The primary time zones
are those that are shown in the UI's time zone selection list.

timezones.ics is generated by running zmtzdata2ical utility.  This utility
takes the Olson time zone database files and a couple of supplemental data
files and generates timezones.ics file.

The timezones.ics is a valid iCalendar object consisting of VTIMEZONE
sub-objects.  Each time zone in the Olson data is output as a VTIMEZONE.
While the time zones in Olson data files define historical data, the time
zones generated to timezones.ics file strip away the historical info and only
contain a single-year rule.  That is, each time zone in timezones.ics assumes
the daylight savings time policy remains the same every year.  For example, in
the US the DST policies changed over the years, but the generated VTIMEZONE for
America/Los_Angeles will say DST starts on the 2nd Sunday of March and end on
the 1st Sunday of November, in every single year.  This simplification was
originally adopted to avoid breaking Microsoft Outlook client.


Running the Converter
---------------------

To generate timezones.ics, follow these steps.

1. Download the archive of the latest Olson tzdata files.
   As of October 2013, these were obtainable from:
       http://www.iana.org/time-zones
   The latest version at that date was tzdata2013g.tar.gz

2. Untar the tzdata archive into a directory called tzdata.

3. Update windows-names file based on the latest time zone names used in
   Windows operating system(s). (more on this later)

4. Update extra-data file accordingly after updating windows-names.
   (more on this later)

5. Run the generator.

   $ zmtzdata2ical -o timezones.ics -e extra-data -t tzdata windows-names

   For information on other options, use "zmtzdata2ical --help"

6. Review the generated timezones.ics and make any fixes as necessary.  There
   may be errors in the generated file because of bugs in the generator utility
   or the data files themselves.  Look at the diff from the previous version of
   timezones.ics and compare the changes against the published time zone policy
   changes.

7. Convert the timezones.ics from using \r\n line endings to \n line endings.
   (Although \r\n endings are technically more correct for .ics files, some
    tools, such as zmsetup.pl require \n line endings)

   $ perl -i.org -pe 's/\r\n/\n/' timezones.ics

8. Check in the timezones.ics file under ZimbraServer/conf, and windows-names
   and extra-data files under ZimbraServer/conf/tz.

The windows-names File
----------------------

See tools/updateWindowsNames.py for how updates were gathered in October 2013.

"windows-names" maps Windows time zone names to Olson equivalents.  Microsoft
publishes updates to Windows time zones via Microsoft Update, the automatic
software update mechanism for Microsoft products.  Run Microsoft Update to
get the latest time zones before updating the windows-name file.  The Windows
names include both current and past names.  Past names must be kept because
calendar objects created in the past may use these time zone names.  The
mapping for past names may have to be updated as existing time zones are split
to multiple zones or multiple zones are merged.

The time zone names from Windows 7 contain "UTC" in the offset section.
Windows XP names contain "GMT" in the offset section.  It is assumed Windows
Vista names are identical to Windows 7 names.  In almost all cases each time
zone should appear twice, once with "UTC" and again with "GMT".

Each line in the windows-names file has three parts:

Link  <olson TZ name>  <windows TZ name>

The Link command maps the Windows name to Olson name.

Here are some thoughts on why is it important to maintain these mappings:

a.  The authorities responsible for a timezone (usually governments) can and
    frequently do change the rules for their timezone.
b.  At any one time, there are often several timezones that share the same
    simplified (or even full) rules.
c.  Just because the rules for 2 timezones happen to be the same at one point
    in time does not mean they always will.
d.  If we discard region/other information and use timezones based solely
    on rules, we cannot differentiate between calendar items which should be
    updated when rules for a region change and those which should not be
    updated because the region they are homed in has not changed their rules.

The extra-data File
-------------------

This file feeds extra data to the TZ converter after the Olson data files have
been processed.  The main purpose of this file is to indicate the primary time
zones to list in the UI, and to indicate default choice if a given time zone
offset has multiple primary zones.

The file has two sections.  The first section lists all Olson names to be shown
in the UI:

PrimaryZone  <olson TZ name>

One reasonable choice for the selections is the Windows time zone selector.
Note the list should contain Olson names, not Windows names.

The second section contains ZoneMatchScore lines.  Each time zone is given a
match score.  By default a time zone's match score is 0.  A time zone chosen as
PrimaryZone has the match score of 100.  When there are multiple primary zones
for a given GMT offset it becomes ambiguous which one should be used as a
default choice in a time zone detection algorithm.  To resolve this, choose one
of the primary zones and raise its match score.  For example, Korea and Japan
have the same time zones but the primary list includes both Asia/Seoul and
Asia/Tokyo.  To give higher priority to Japan as default choice, add a
ZoneMatchScore line like this:

ZoneMatchScore  Asia/Tokyo  200
